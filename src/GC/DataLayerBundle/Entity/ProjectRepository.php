<?php

namespace GC\DataLayerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{

    public function getGrooveCount($project) {
        return  $this->_em->createQuery('SELECT COUNT(g.id) FROM GC\DataLayerBundle\Entity\Groove g 
        	JOIN g.grooveSet gs WHERE gs.project = :project')
        ->setParameter('project', $project)
        ->getSingleScalarResult();
    }

    public function getContestEndDate($project) {
        $then = new \DateTime($project->getCreatedAt() + $project->getContestLength());
        return $then;
    }

    public function getPayoutAmount($project) {
        return  $this->_em->createQuery('SELECT pm.payout FROM GC\DataLayerBundle\Entity\PriceMap pm 
        	WHERE pm.project_type_id = :project_type_id AND pm.package_id = :package_id')
        ->setParameter('project_type_id', $project->getProjectType()->getId())
        ->setParameter('package_id', $project->getPackage()->getId())
        ->getSingleScalarResult();
    }

    public function getPrice($project) {
        return  $this->_em->createQuery('SELECT pm.price FROM GC\DataLayerBundle\Entity\PriceMap pm 
            WHERE pm.project_type_id = :project_type_id AND pm.package_id = :package_id')
        ->setParameter('project_type_id', $project->getProjectType()->getId())
        ->setParameter('package_id', $project->getPackage()->getId())
        ->getSingleScalarResult();
    }

    public function removeTag($project, $tagName) {
        if($tag= $this->_em->getRepository('GCDataLayerBundle:Tag')->findOneByName($tagName)) {            
            $q = $this->getEntityManager()
                           ->getConnection()
                           ->prepare('DELETE FROM project_tag WHERE project_id = ' . $project->getId() . ' AND tag_id = ' . $tag->getId());
              $q->execute();
              return 1;         
        } else {
            return 0;
        }
    }
}